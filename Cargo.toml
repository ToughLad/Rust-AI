[package]
name = "rust-ai"
version = "0.1.0"
edition = "2021"
description = "Rust-based AI API aggregator supporting multiple providers including Cloudflare, Mistral, OpenAI, Anthropic, Meta, XAI, Groq, and OpenRouter"
license = "CC-BY-NC-SA-4.0"
authors = ["ToughLad"]
repository = "https://github.com/ToughLad/Rust-AI"
keywords = ["ai", "api", "llm", "openai", "anthropic"]
categories = ["web-programming", "api-bindings"]

[dependencies]
# Web framework
axum = "0.7"
tokio = { version = "1", features = ["full"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }

# Serialization/Deserialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# HTTP client
reqwest = { version = "0.11", features = ["json", "stream"] }

# Environment variables
dotenvy = "0.15"

# Validation
validator = { version = "0.18", features = ["derive"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# UUID generation
uuid = { version = "1.0", features = ["v4", "serde"] }

# Date/time handling
chrono = { version = "0.4", features = ["serde"] }

# JWT handling
jsonwebtoken = "9.0"

# Password hashing
bcrypt = "0.15"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["json"] }

# Configuration
config = "0.14"

# Base64 encoding/decoding
base64 = "0.22"

# Regex
regex = "1.0"

# Random number generation
rand = "0.8"

# Streaming utilities
futures = "0.3"
futures-util = "0.3"

# URL encoding/decoding
urlencoding = "2.0"

# Database/external service client simulation (placeholder)
# convex-rs would go here when available

[dev-dependencies]
tokio-test = "0.4"
axum-test = "14.0"